<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-1H4CNVS" failures="0" tests="6" name="FirefoxTest" time="0.102" errors="0" timestamp="2023-02-13T12:09:09 IST">
  <testcase classname="testNgPackage.TestNgClass2" name="@BeforeTest launchtheBrowser" time="0.045">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: XP
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-1H4CNVS&amp;apos;, ip: &amp;apos;192.168.1.5&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.2.1&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: XP
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-1H4CNVS', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:100)
at java.base/java.util.Optional.orElseGet(Optional.java:364)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at testNgPackage.TestNgClass2.launchtheBrowser(TestNgClass2.java:31)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchtheBrowser -->
  <testcase classname="testNgPackage.TestNgClass2" name="@BeforeClass createPomObjects" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass createPomObjects -->
  <testcase classname="testNgPackage.TestNgClass2" name="@BeforeMethod loginPageoFacebook" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginPageoFacebook -->
  <testcase classname="testNgPackage.TestNgClass3" name="@BeforeMethod before" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod before -->
  <testcase classname="testNgPackage.TestNgClass3" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPackage.TestNgClass3" name="@BeforeMethod before" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod before -->
  <testcase classname="testNgPackage.TestNgClass3" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPackage.TestNgClass3" name="@BeforeMethod before" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod before -->
  <testcase classname="testNgPackage.TestNgClass3" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPackage.TestNgClass3" name="@BeforeMethod before" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod before -->
  <testcase classname="testNgPackage.TestNgClass3" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPackage.TestNgClass3" name="@BeforeMethod before" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod before -->
  <testcase classname="testNgPackage.TestNgClass3" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPackage.TestNgClass3" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase classname="testNgPackage.TestNgClass2" name="loginPageofFacebook" time="0.0">
    <skipped/>
  </testcase> <!-- loginPageofFacebook -->
  <testcase classname="testNgPackage.TestNgClass3" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase classname="testNgPackage.TestNgClass3" name="text3" time="0.0">
    <skipped/>
  </testcase> <!-- text3 -->
  <testcase classname="testNgPackage.TestNgClass3" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="testNgPackage.TestNgClass3" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
</testsuite> <!-- FirefoxTest -->
